version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: oilpier-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: oil_pier_harbour
      MYSQL_USER: oilpier
      MYSQL_PASSWORD: oilpier123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - oilpier-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: oilpier-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - oilpier-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: oilpier-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - oilpier-network

  # MQTT Broker (Eclipse Mosquitto)
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: oilpier-mqtt
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - oilpier-network

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    container_name: oilpier-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - oilpier-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: oilpier-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - oilpier-network

  # 后端应用
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: oilpier-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/oil_pier_harbour?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
      SPRING_DATASOURCE_USERNAME: oilpier
      SPRING_DATASOURCE_PASSWORD: oilpier123
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      OILPIER_MQTT_BROKER: tcp://mqtt:1883
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - mqtt
    networks:
      - oilpier-network

  # 前端应用
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: oilpier-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost/api
    networks:
      - oilpier-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  minio_data:

networks:
  oilpier-network:
    driver: bridge
